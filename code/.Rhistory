names(data) <- c("RawTaxa", "X", "Group", "LDA", "pval")
plot_data <- subset(data, !is.na(data$LDA))
taxa_strs <- list()
for (raw in plot_data$RawTaxa) {
split <- as.character(unlist(str_split(raw, "\\.")))
i <- length(split)
blanks <- 0
while (i > 0) {
if (split[i] == "__") {
blanks <- blanks + 1
print(split)
split <- split[1:i-1]
print(split)
}
else {
break
}
i <- i - 1
}
if (length(split) == 1) {
taxa_str <- split[1]
}
else {
taxa_str <- paste(split[length(split)-1], split[length(split)])
}
if (blanks > 0) {
for (i in 1:blanks) {
taxa_str <- paste(taxa_str, "__uncl.", sep="")
}
}
taxa_strs <- append(taxa_strs, taxa_str)
}
plot_data$Taxa <- as.character(taxa_strs)
#plot_data$Taxa <- sub(".*_s__", '', plot_data$RawTaxa)
plot_data[plot_data$Group == "Control",]$LDA <- -1 * plot_data[plot_data$Group == "Control",]$LDA
# set colors and factors
group.colors <- c(healthy = "#B3A98C", affected = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'affected'))
group.colors <- c(healthy = "#B3A98C", RA = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'RA'))
group.colors <- c(healthy = "#B3A98C", psa = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'RA'))
# AvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_pretty.pdf", width=20, height=20)
# RAvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_pretty.pdf", width=20, height=20)
# PsAvH
pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_pretty.pdf", width=20, height=20)
p <- ggbarplot(plot_data, x="Taxa", y="LDA", fill="Group", width= 1, color = "white", sort.val = "asc", sort.by.groups=TRUE) +
labs(x = "", y = "LDA score", fill="Group") + coord_flip() +
#scale_fill_manual(name="Legend", values = c("Affected", "Healthy')")) +
# scale_fill_manual(values=c("#E69F00",'#B3A98C','#605843')) + bkg # flip around as need be
# scale_fill_manual(values=c("#B3A98C",'#E69F00','#605843')) + bkg # flip around as need be
scale_fill_manual(values=group.colors) + bkg
plot(p)
dev.off()
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggpubr)
#######
bkg <-
theme(axis.text.x = element_text(size = 24, color = "black")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1)) +
theme(axis.title.x = element_text(margin = unit(c(0,0,4,0), "mm"))) +
theme(axis.title.x = element_text(size = 24, color = "black")) +
theme(axis.text.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(margin = unit(c(0,4,0,0), "mm"))) +
theme(legend.position = "right") +
theme(legend.title = element_text(size = 24)) +
theme(legend.text = element_text(size = 24)) +
theme(legend.key.size = unit(0.6, 'cm')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(plot.title = element_text(size=, color= "black", face ="bold")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(size=24, color= "black"))
####
### PsA Type
# AvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_results.res", header = FALSE, sep = "\t")
# RAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_results.res", header = FALSE, sep = "\t")
# PsAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_results.res", header = FALSE, sep = "\t")
# PsOvH
data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs01/lefse_results.res", header = FALSE, sep = "\t")
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggpubr)
#######
bkg <-
theme(axis.text.x = element_text(size = 24, color = "black")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1)) +
theme(axis.title.x = element_text(margin = unit(c(0,0,4,0), "mm"))) +
theme(axis.title.x = element_text(size = 24, color = "black")) +
theme(axis.text.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(margin = unit(c(0,4,0,0), "mm"))) +
theme(legend.position = "right") +
theme(legend.title = element_text(size = 24)) +
theme(legend.text = element_text(size = 24)) +
theme(legend.key.size = unit(0.6, 'cm')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(plot.title = element_text(size=, color= "black", face ="bold")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(size=24, color= "black"))
####
### PsA Type
# AvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_results.res", header = FALSE, sep = "\t")
# RAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_results.res", header = FALSE, sep = "\t")
# PsAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_results.res", header = FALSE, sep = "\t")
# PsOvH
data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_results.res", header = FALSE, sep = "\t")
names(data) <- c("RawTaxa", "X", "Group", "LDA", "pval")
plot_data <- subset(data, !is.na(data$LDA))
taxa_strs <- list()
for (raw in plot_data$RawTaxa) {
split <- as.character(unlist(str_split(raw, "\\.")))
i <- length(split)
blanks <- 0
while (i > 0) {
if (split[i] == "__") {
blanks <- blanks + 1
print(split)
split <- split[1:i-1]
print(split)
}
else {
break
}
i <- i - 1
}
if (length(split) == 1) {
taxa_str <- split[1]
}
else {
taxa_str <- paste(split[length(split)-1], split[length(split)])
}
if (blanks > 0) {
for (i in 1:blanks) {
taxa_str <- paste(taxa_str, "__uncl.", sep="")
}
}
taxa_strs <- append(taxa_strs, taxa_str)
}
plot_data$Taxa <- as.character(taxa_strs)
#plot_data$Taxa <- sub(".*_s__", '', plot_data$RawTaxa)
plot_data[plot_data$Group == "Control",]$LDA <- -1 * plot_data[plot_data$Group == "Control",]$LDA
# set colors and factors
group.colors <- c(healthy = "#B3A98C", affected = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'affected'))
group.colors <- c(healthy = "#B3A98C", RA = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'RA'))
group.colors <- c(healthy = "#B3A98C", psa = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'psa'))
group.colors <- c(healthy = "#B3A98C", pso = "#E69F00")
plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'pso'))
# AvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_pretty.pdf", width=20, height=20)
# RAvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_pretty.pdf", width=20, height=20)
# PsAvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_pretty.pdf", width=20, height=20)
# PsOvH
pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_pretty.pdf", width=20, height=20)
p <- ggbarplot(plot_data, x="Taxa", y="LDA", fill="Group", width= 1, color = "white", sort.val = "asc", sort.by.groups=TRUE) +
labs(x = "", y = "LDA score", fill="Group") + coord_flip() +
#scale_fill_manual(name="Legend", values = c("Affected", "Healthy')")) +
# scale_fill_manual(values=c("#E69F00",'#B3A98C','#605843')) + bkg # flip around as need be
# scale_fill_manual(values=c("#B3A98C",'#E69F00','#605843')) + bkg # flip around as need be
scale_fill_manual(values=group.colors) + bkg
plot(p)
dev.off()
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggpubr)
#######
bkg <-
theme(axis.text.x = element_text(size = 24, color = "black")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1)) +
theme(axis.title.x = element_text(margin = unit(c(0,0,4,0), "mm"))) +
theme(axis.title.x = element_text(size = 24, color = "black")) +
theme(axis.text.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(margin = unit(c(0,4,0,0), "mm"))) +
theme(legend.position = "right") +
theme(legend.title = element_text(size = 24)) +
theme(legend.text = element_text(size = 24)) +
theme(legend.key.size = unit(0.6, 'cm')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(plot.title = element_text(size=, color= "black", face ="bold")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(size=24, color= "black"))
####
### PsA Type
# AvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_results.res", header = FALSE, sep = "\t")
# RAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_results.res", header = FALSE, sep = "\t")
# PsAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_results.res", header = FALSE, sep = "\t")
# PsOvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_results.res", header = FALSE, sep = "\t")
# SSvH
data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_6/lefse_results.res", header = FALSE, sep = "\t")
# SLEvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_7/lefse_results.res", header = FALSE, sep = "\t")
names(data) <- c("RawTaxa", "X", "Group", "LDA", "pval")
plot_data <- subset(data, !is.na(data$LDA))
taxa_strs <- list()
for (raw in plot_data$RawTaxa) {
split <- as.character(unlist(str_split(raw, "\\.")))
i <- length(split)
blanks <- 0
while (i > 0) {
if (split[i] == "__") {
blanks <- blanks + 1
print(split)
split <- split[1:i-1]
print(split)
}
else {
break
}
i <- i - 1
}
if (length(split) == 1) {
taxa_str <- split[1]
}
else {
taxa_str <- paste(split[length(split)-1], split[length(split)])
}
if (blanks > 0) {
for (i in 1:blanks) {
taxa_str <- paste(taxa_str, "__uncl.", sep="")
}
}
taxa_strs <- append(taxa_strs, taxa_str)
}
plot_data$Taxa <- as.character(taxa_strs)
#plot_data$Taxa <- sub(".*_s__", '', plot_data$RawTaxa)
plot_data[plot_data$Group == "Control",]$LDA <- -1 * plot_data[plot_data$Group == "Control",]$LDA
# set colors and factors
group.colors <- c(healthy = "#B3A98C", affected = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'affected'))
group.colors <- c(healthy = "#B3A98C", RA = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'RA'))
group.colors <- c(healthy = "#B3A98C", psa = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'psa'))
group.colors <- c(healthy = "#B3A98C", pso = "#E69F00")
# plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'pso'))
group.colors <- c(healthy = "#B3A98C", SS = "#E69F00")
plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'ss'))
#group.colors <- c(healthy = "#B3A98C", SS = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'sle'))
# AvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_pretty.pdf", width=20, height=20)
# RAvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_pretty.pdf", width=20, height=20)
# PsAvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_pretty.pdf", width=20, height=20)
# PsOvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_pretty.pdf", width=20, height=20)
# SSvH
pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_6/lefse_pretty.pdf", width=20, height=20)
# SLEvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_7/lefse_pretty.pdf", width=20, height=20)
p <- ggbarplot(plot_data, x="Taxa", y="LDA", fill="Group", width= 1, color = "white", sort.val = "asc", sort.by.groups=TRUE) +
labs(x = "", y = "LDA score", fill="Group") + coord_flip() +
#scale_fill_manual(name="Legend", values = c("Affected", "Healthy')")) +
# scale_fill_manual(values=c("#E69F00",'#B3A98C','#605843')) + bkg # flip around as need be
# scale_fill_manual(values=c("#B3A98C",'#E69F00','#605843')) + bkg # flip around as need be
scale_fill_manual(values=group.colors) + bkg
plot(p)
dev.off()
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggpubr)
#######
bkg <-
theme(axis.text.x = element_text(size = 24, color = "black")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1)) +
theme(axis.title.x = element_text(margin = unit(c(0,0,4,0), "mm"))) +
theme(axis.title.x = element_text(size = 24, color = "black")) +
theme(axis.text.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(margin = unit(c(0,4,0,0), "mm"))) +
theme(legend.position = "right") +
theme(legend.title = element_text(size = 24)) +
theme(legend.text = element_text(size = 24)) +
theme(legend.key.size = unit(0.6, 'cm')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(plot.title = element_text(size=, color= "black", face ="bold")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(size=24, color= "black"))
####
### PsA Type
# AvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_results.res", header = FALSE, sep = "\t")
# RAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_results.res", header = FALSE, sep = "\t")
# PsAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_results.res", header = FALSE, sep = "\t")
# PsOvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_results.res", header = FALSE, sep = "\t")
# SSvH
data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_6/lefse_results.res", header = FALSE, sep = "\t")
# SLEvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_7/lefse_results.res", header = FALSE, sep = "\t")
names(data) <- c("RawTaxa", "X", "Group", "LDA", "pval")
plot_data <- subset(data, !is.na(data$LDA))
taxa_strs <- list()
for (raw in plot_data$RawTaxa) {
split <- as.character(unlist(str_split(raw, "\\.")))
i <- length(split)
blanks <- 0
while (i > 0) {
if (split[i] == "__") {
blanks <- blanks + 1
print(split)
split <- split[1:i-1]
print(split)
}
else {
break
}
i <- i - 1
}
if (length(split) == 1) {
taxa_str <- split[1]
}
else {
taxa_str <- paste(split[length(split)-1], split[length(split)])
}
if (blanks > 0) {
for (i in 1:blanks) {
taxa_str <- paste(taxa_str, "__uncl.", sep="")
}
}
taxa_strs <- append(taxa_strs, taxa_str)
}
plot_data$Taxa <- as.character(taxa_strs)
#plot_data$Taxa <- sub(".*_s__", '', plot_data$RawTaxa)
plot_data[plot_data$Group == "Control",]$LDA <- -1 * plot_data[plot_data$Group == "Control",]$LDA
# set colors and factors
group.colors <- c(healthy = "#B3A98C", affected = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'affected'))
group.colors <- c(healthy = "#B3A98C", RA = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'RA'))
group.colors <- c(healthy = "#B3A98C", psa = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'psa'))
group.colors <- c(healthy = "#B3A98C", pso = "#E69F00")
# plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'pso'))
group.colors <- c(healthy = "#B3A98C", ss = "#E69F00")
plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'ss'))
#group.colors <- c(healthy = "#B3A98C", sle = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'sle'))
# AvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_pretty.pdf", width=20, height=20)
# RAvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_pretty.pdf", width=20, height=20)
# PsAvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_pretty.pdf", width=20, height=20)
# PsOvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_pretty.pdf", width=20, height=20)
# SSvH
pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_6/lefse_pretty.pdf", width=20, height=20)
# SLEvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_7/lefse_pretty.pdf", width=20, height=20)
p <- ggbarplot(plot_data, x="Taxa", y="LDA", fill="Group", width= 1, color = "white", sort.val = "asc", sort.by.groups=TRUE) +
labs(x = "", y = "LDA score", fill="Group") + coord_flip() +
#scale_fill_manual(name="Legend", values = c("Affected", "Healthy')")) +
# scale_fill_manual(values=c("#E69F00",'#B3A98C','#605843')) + bkg # flip around as need be
# scale_fill_manual(values=c("#B3A98C",'#E69F00','#605843')) + bkg # flip around as need be
scale_fill_manual(values=group.colors) + bkg
plot(p)
dev.off()
library(ggplot2)
library(dplyr)
library(tidyverse)
library(ggpubr)
#######
bkg <-
theme(axis.text.x = element_text(size = 24, color = "black")) +
theme(axis.text.x = element_text(angle=90, vjust = 0.5, hjust = 1)) +
theme(axis.title.x = element_text(margin = unit(c(0,0,4,0), "mm"))) +
theme(axis.title.x = element_text(size = 24, color = "black")) +
theme(axis.text.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(size = 24, color = "black")) +
theme(axis.title.y = element_text(margin = unit(c(0,4,0,0), "mm"))) +
theme(legend.position = "right") +
theme(legend.title = element_text(size = 24)) +
theme(legend.text = element_text(size = 24)) +
theme(legend.key.size = unit(0.6, 'cm')) +
theme(panel.grid.major = element_blank()) +
theme(panel.grid.minor = element_blank()) +
theme(panel.background = element_blank()) +
theme(axis.line = element_line(colour = "black")) +
theme(plot.title = element_text(size=, color= "black", face ="bold")) +
theme(plot.title = element_text(hjust = 0.5)) +
theme(plot.subtitle = element_text(size=24, color= "black"))
####
### PsA Type
# AvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_results.res", header = FALSE, sep = "\t")
# RAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_results.res", header = FALSE, sep = "\t")
# PsAvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_results.res", header = FALSE, sep = "\t")
# PsOvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_results.res", header = FALSE, sep = "\t")
# SSvH
# data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_6/lefse_results.res", header = FALSE, sep = "\t")
# SLEvH
data <-read.table("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_7/lefse_results.res", header = FALSE, sep = "\t")
names(data) <- c("RawTaxa", "X", "Group", "LDA", "pval")
plot_data <- subset(data, !is.na(data$LDA))
taxa_strs <- list()
for (raw in plot_data$RawTaxa) {
split <- as.character(unlist(str_split(raw, "\\.")))
i <- length(split)
blanks <- 0
while (i > 0) {
if (split[i] == "__") {
blanks <- blanks + 1
print(split)
split <- split[1:i-1]
print(split)
}
else {
break
}
i <- i - 1
}
if (length(split) == 1) {
taxa_str <- split[1]
}
else {
taxa_str <- paste(split[length(split)-1], split[length(split)])
}
if (blanks > 0) {
for (i in 1:blanks) {
taxa_str <- paste(taxa_str, "__uncl.", sep="")
}
}
taxa_strs <- append(taxa_strs, taxa_str)
}
plot_data$Taxa <- as.character(taxa_strs)
#plot_data$Taxa <- sub(".*_s__", '', plot_data$RawTaxa)
plot_data[plot_data$Group == "Control",]$LDA <- -1 * plot_data[plot_data$Group == "Control",]$LDA
# set colors and factors
group.colors <- c(healthy = "#B3A98C", affected = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'affected'))
group.colors <- c(healthy = "#B3A98C", RA = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'RA'))
group.colors <- c(healthy = "#B3A98C", psa = "#E69F00")
#plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'psa'))
group.colors <- c(healthy = "#B3A98C", pso = "#E69F00")
# plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'pso'))
group.colors <- c(healthy = "#B3A98C", ss = "#E69F00")
# plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'ss'))
group.colors <- c(healthy = "#B3A98C", sle = "#E69F00")
plot_data$Group <- factor(plot_data$Group, levels = c('healthy', 'sle'))
# AvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_3/lefse_pretty.pdf", width=20, height=20)
# RAvH
#pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_4/lefse_pretty.pdf", width=20, height=20)
# PsAvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs02/lefse_pretty.pdf", width=20, height=20)
# PsOvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/outputs/jobs03/lefse_pretty.pdf", width=20, height=20)
# SSvH
# pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_6/lefse_pretty.pdf", width=20, height=20)
# SLEvH
pdf("/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/graphs/Lefse_7/lefse_pretty.pdf", width=20, height=20)
p <- ggbarplot(plot_data, x="Taxa", y="LDA", fill="Group", width= 1, color = "white", sort.val = "asc", sort.by.groups=TRUE) +
labs(x = "", y = "LDA score", fill="Group") + coord_flip() +
#scale_fill_manual(name="Legend", values = c("Affected", "Healthy')")) +
# scale_fill_manual(values=c("#E69F00",'#B3A98C','#605843')) + bkg # flip around as need be
# scale_fill_manual(values=c("#B3A98C",'#E69F00','#605843')) + bkg # flip around as need be
scale_fill_manual(values=group.colors) + bkg
plot(p)
dev.off()
df = read.delim('/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/inputs/df_ss_med_R.tsv', sep = '\t')
View(df)
out <- glm(shannon_entropy ~ hcq + mtx, data = df, family = binomial)
help(glm)
df = read.delim('/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/inputs/df_ss_med_R.tsv', sep = '\t')
out <- glm(shannon_entropy ~ hcq + mtx, data = df, family = gaussian)
summary(out)
df = read.delim('/Users/KevinBu/Desktop/clemente_lab/Projects/ampaim/inputs/df_ss_med_R.tsv', sep = '\t')
out <- glm(shannon_entropy ~ hcq + mtx + hcq:mtx, data = df, family = gaussian)
summary(out)
